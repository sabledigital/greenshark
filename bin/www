#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('greenshark:server');
var http = require('http');
var fs = require('fs');
var https = require('https');


var crtmaster = fs.readFileSync('sslcert/gd_bundle-g2-g1.crt', 'utf8');
var my_cert  = fs.readFileSync('sslcert/my-site.crt', 'utf8');
var privkey = fs.readFileSync('sslcert/pk.key', 'utf8');

/**
 * Get port from environment and store in Express.
 */

 var credentials = {key: privkey, certificate: my_cert, ca:[crtmaster]};

var port = process.env.PORT || '3000';

/**
 * Create HTTP server.
 */

http.createServer(app).listen(port);
https.createServer(credentials, app).listen(443);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
